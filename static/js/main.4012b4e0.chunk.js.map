{"version":3,"sources":["actions/actions.js","reducers/index.js","Map/hereTileLayers.js","Map/Map.jsx","Controls/Control.jsx","App.jsx","index.js"],"names":["UPDATE_ERDDAPINPUT","REQUEST_ERDDAP_DATA","RECEIVE_ERDDAP_DATA","UPDATE_FEATURE_COUNT","UPDATE_QUERY","processErddapResponse","json","att","url","dispatch","results","console","log","features","parseErddapResponse","receiveErddapData","pathname","match","payload","type","requestErddapData","initialIsochronesControlsState","erddapInput","erddapResults","featureCount","isFetching","initialFiltersState","query","rootReducer","combineReducers","isochronesControls","state","action","inputValue","filters","HereTileLayers","HERE","L","extend","options","subdomains","minZoom","maxZoom","scheme","resource","mapId","format","appId","appCode","initialize","schemeStart","this","split","tileResolution","retina","tileServer","indexOf","tileUrl","_attributionUrl","template","prototype","call","_attributionText","onAdd","map","_attributionBBoxes","_fetchAttributionBBoxes","onRemove","_map","attributionControl","removeAttribution","off","_findCopyrightBBox","xmlhttp","XMLHttpRequest","onreadystatechange","readyState","status","_parseAttributionBBoxes","JSON","parse","responseText","open","send","providers","normal","i","length","boxes","j","box","on","_attributionProviders","visibleProviders","zoom","getZoom","visibleBounds","getBounds","minLevel","maxLevel","push","overlaps","attributions","provider","alt","label","attributionText","join","addAttribution","here","opts","HexbinLayer","SVG","_destroyContainer","redraw","d3","_container","remove","style","width","height","hereReducedDay","esriOceans","esri","markersLayer","featureGroup","markersClusterLayer","markerClusterGroup","heatLayer","radius","opacity","duration","colorScaleExtent","undefined","radiusScaleExtent","colorDomain","radiusDomain","colorRange","radiusRange","pointerEvents","hexLayer","hexbinLayer","hoverHandler","HexbinHoverHandler","tooltip","colorScale","range","interpolate","southWest","latLng","northEast","mapParams","center","zoomControl","maxBounds","latLngBounds","layers","Map","createPane","baseMaps","overlays","control","addTo","position","prevProps","datasets","props","myIcon","divIcon","className","iconSize","coords","coords_rev","fcount","forEach","dataset","visibile","points","data","geoJSON","pointToLayer","feature","latlng","marker","icon","onEachFeature","layer","geometry","coordinates","filter","contains","GeoJSON","coordsToLatLngs","setLatLngs","getLayers","clearLayers","prevState","addErddap","id","React","Component","connect","segmentStyle","zIndex","top","left","maxHeight","overflow","padding","segmentStyle2","marginTop","Control","handleInputChange","event","target","value","handleAddErddap","data_url","URL","attribute_url","replace","fetch","then","response","text","matches","matchAll","x","catch","error","handleErddapToggleVisibility","name","handleErddapRemoveDataset","getErddapCommonFields","fields","attributes","includes","getErddapURLs","List","Item","Icon","size","verticalAlign","Content","Button","Group","floated","data-tooltip","data-position","small","compact","onClick","bind","Header","as","Description","handleQueryChange","Segment","Divider","Grid","Row","columns","Column","Input","loading","onChange","color","divided","relaxed","QueryBuilderSemantic","getQueryString","operators","onQueryChange","App","middleware","thunk","store","createStore","reducer","composeWithDevTools","applyMiddleware","render","document","getElementById"],"mappings":"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","file":"static/js/main.4012b4e0.chunk.js","sourcesContent":["export const UPDATE_ERDDAPINPUT = 'UPDATE_ERDDAPINPUT'\nexport const REQUEST_ERDDAP_DATA = 'REQUEST_ERDDAP_DATA'\nexport const RECEIVE_ERDDAP_DATA = 'RECEIVE_ERDDAP_DATA'\nexport const UPDATE_FEATURE_COUNT = 'UPDATE_FEATURE_COUNT'\nexport const UPDATE_QUERY = 'UPDATE_QUERY'\n\nexport const fetchErddapData = payload => dispatch => {\n\n    // It dispatches a further action to let our state know that requests are about to be made (loading spinner listens to this!)\n    dispatch(requestErddapData())\n\n    // we define our url and parameters to be sent along\n    let data_url = new URL(payload.inputValue)\n    const regex = /\\.geoJson\\?.*$/i\n    let attribute_url = new URL(payload.inputValue.replace(regex, '.dds'))\n    let att = []\n\n    console.log(payload.inputValue)\n    console.log(attribute_url)\n\n    return fetch(attribute_url)\n      .then(response => response.text())\n      .then(response => {\n        console.log(response)\n        const regex = /\\s.* (.*);/gm\n        let matches = [...response.matchAll(regex)]\n        att = matches.map(x => x[1])\n        return response\n      })\n      .then(data => fetch(data_url))\n      // when a response is returned we extract the json data\n      .then(response => response.json())\n      // and this data we dispatch for processing in processGeocodeResponse\n      .then(data => {\n        console.log(data)\n        return dispatch(processErddapResponse(data, att, data_url))\n      })\n      .catch(error => console.error(error))\n  }\n\nconst parseErddapResponse = (json) => {\n  // parsing the response\n  console.log(json)\n  if(json.features){\n    return json\n  }\n}\n\nconst processErddapResponse = (json, att, url) => dispatch => {\n    // parse the json file and dispatch the results which will be reduced\n    const results = parseErddapResponse(json)\n    // let's let the loading spinner now that it doesn't have to spin anymore\n    dispatch(receiveErddapData({'url':url, 'name':url.pathname.match(/tabledap\\/(.*)\\.geoJson/)[1], 'data':results, 'attributes':att, 'visibile':true}))\n  }\n\nexport const receiveErddapData = payload => ({\n    type: RECEIVE_ERDDAP_DATA,\n    results: payload\n  })\n\nexport const updateFeatureCount = payload => ({\n    type: UPDATE_FEATURE_COUNT,\n    payload\n  })\n\nexport const requestErddapData = payload => ({\n    type: REQUEST_ERDDAP_DATA,\n    ...payload\n  })\n\nexport const updateErddapInput = payload => ({\n  type: UPDATE_ERDDAPINPUT,\n  payload\n})\n\nexport const updateQuery = payload => ({\n  type: UPDATE_QUERY,\n  payload\n})\n","import { combineReducers } from 'redux'\nimport {\n    UPDATE_ERDDAPINPUT,\n    REQUEST_ERDDAP_DATA,\n    RECEIVE_ERDDAP_DATA,\n    UPDATE_FEATURE_COUNT,\n    UPDATE_QUERY,\n  } from '../actions/actions'\n\n// these are our initial isochrones settings\nconst initialIsochronesControlsState = {\n  erddapInput: \"\",\n  erddapResults: [],\n  featureCount: 0,\n  isFetching: false,\n}\n\nconst initialFiltersState = {\n  query: \"\",\n}\n\nconst filters = (state = initialFiltersState, action) => {\n  switch (action.type) {\n    case UPDATE_QUERY:\n        return {\n        ...state,\n        query: action.payload.inputValue\n        }\n        default:\n          return state\n      }\n    }\n\n// our reducer constant returning an unchanged or updated state object depending on the users action, many cases will follow\nconst isochronesControls = (state = initialIsochronesControlsState, action) => {\n  switch (action.type) {\n    case UPDATE_ERDDAPINPUT:\n        return {\n        ...state,\n        erddapInput: action.payload.inputValue\n        }\n    // let the app know the request is being made (for our spinner)\n    case REQUEST_ERDDAP_DATA:\n        return {\n        ...state,\n        isFetching: true\n        }\n    // when results are returned by the API update the state with addresses and let the app know it is no longer fetching\n    case RECEIVE_ERDDAP_DATA:\n        return {\n        ...state,\n        erddapResults: [...state.erddapResults, action.results],\n        isFetching: false\n        }\n    case UPDATE_FEATURE_COUNT:\n      return {\n        ...state,\n        featureCount: action.payload.featureCount\n      }\n    default:\n      return state\n  }\n}\n\n// creates a root reducer and combines different reducers if needed\nconst rootReducer = combineReducers({\n  isochronesControls,\n  filters\n})\n\nexport default rootReducer\n","import * as L from \"leaflet\";\n\nvar HereTileLayers = {};\n\n// 🍂class TileLayer.HERE\n// Tile layer for HERE maps tiles.\nHereTileLayers.HERE = L.TileLayer.extend({\n  options: {\n    subdomains: \"1234\",\n    minZoom: 2,\n    maxZoom: 18,\n\n    // 🍂option scheme: String = 'normal.day'\n    // The \"map scheme\", as documented in the HERE API.\n    scheme: \"normal.day\",\n\n    // 🍂option resource: String = 'maptile'\n    // The \"map resource\", as documented in the HERE API.\n    resource: \"maptile\",\n\n    // 🍂option mapId: String = 'newest'\n    // Version of the map tiles to be used, or a hash of an unique map\n    mapId: \"newest\",\n\n    // 🍂option format: String = 'png8'\n    // Image format to be used (`png8`, `png`, or `jpg`)\n    format: \"png8\",\n\n    // 🍂option appId: String = ''\n    // Required option. The `app_id` provided as part of the HERE credentials\n    appId: \"\",\n\n    // 🍂option appCode: String = ''\n    // Required option. The `app_code` provided as part of the HERE credentials\n    appCode: \"\"\n  },\n\n  initialize: function initialize(options) {\n    options = L.setOptions(this, options);\n\n    // Decide if this scheme uses the aerial servers or the basemap servers\n    var schemeStart = options.scheme.split(\".\")[0];\n    options.tileResolution = 256;\n\n    if (L.Browser.retina) {\n      options.tileResolution = 512;\n    }\n\n    //    {Base URL}{Path}/{resource (tile type)}/{map id}/{scheme}/{zoom}/{column}/{row}/{size}/{format}\n    //    ?app_id={YOUR_APP_ID}\n    //    &app_code={YOUR_APP_CODE}\n    //    &{param}={value}\n\n    var path =\n      \"/{resource}/2.1/{resource}/{mapId}/{scheme}/{z}/{x}/{y}/{tileResolution}/{format}?app_id={appId}&app_code={appCode}\";\n    var attributionPath =\n      \"/maptile/2.1/copyright/{mapId}?app_id={appId}&app_code={appCode}\";\n\n    var tileServer = \"base.maps.api.here.com\";\n    if (\n      // eslint-disable-next-line\n      schemeStart == \"satellite\" ||\n      // eslint-disable-next-line\n      schemeStart == \"terrain\" ||\n      // eslint-disable-next-line\n      schemeStart == \"hybrid\"\n    ) {\n      tileServer = \"aerial.maps.api.here.com\";\n    }\n    if (options.scheme.indexOf(\".traffic.\") !== -1) {\n      tileServer = \"traffic.maps.api.here.com\";\n    }\n\n    var tileUrl = \"https://{s}.\" + tileServer + path;\n\n    this._attributionUrl = L.Util.template(\n      \"https://1.\" + tileServer + attributionPath,\n      this.options\n    );\n\n    L.TileLayer.prototype.initialize.call(this, tileUrl, options);\n\n    this._attributionText = \"\";\n  },\n\n  onAdd: function onAdd(map) {\n    L.TileLayer.prototype.onAdd.call(this, map);\n\n    if (!this._attributionBBoxes) {\n      this._fetchAttributionBBoxes();\n    }\n  },\n\n  onRemove: function onRemove(map) {\n    L.TileLayer.prototype.onRemove.call(this, map);\n\n    this._map.attributionControl.removeAttribution(this._attributionText);\n\n    this._map.off(\"moveend zoomend resetview\", this._findCopyrightBBox, this);\n  },\n\n  _fetchAttributionBBoxes: function _onMapMove() {\n    var xmlhttp = new XMLHttpRequest();\n    xmlhttp.onreadystatechange = L.bind(function() {\n      // eslint-disable-next-line\n      if (xmlhttp.readyState == 4 && xmlhttp.status == 200) {\n        this._parseAttributionBBoxes(JSON.parse(xmlhttp.responseText));\n      }\n    }, this);\n    xmlhttp.open(\"GET\", this._attributionUrl, true);\n    xmlhttp.send();\n  },\n\n  _parseAttributionBBoxes: function _parseAttributionBBoxes(json) {\n    if (!this._map) {\n      return;\n    }\n    var providers = json[this.options.scheme.split(\".\")[0]] || json.normal;\n    for (var i = 0; i < providers.length; i++) {\n      if (providers[i].boxes) {\n        for (var j = 0; j < providers[i].boxes.length; j++) {\n          var box = providers[i].boxes[j];\n          providers[i].boxes[j] = L.latLngBounds([\n            [box[0], box[1]],\n            [box[2], box[3]]\n          ]);\n        }\n      }\n    }\n\n    this._map.on(\"moveend zoomend resetview\", this._findCopyrightBBox, this);\n\n    this._attributionProviders = providers;\n\n    this._findCopyrightBBox();\n  },\n\n  _findCopyrightBBox: function _findCopyrightBBox() {\n    if (!this._map) {\n      return;\n    }\n    var providers = this._attributionProviders;\n    var visibleProviders = [];\n    var zoom = this._map.getZoom();\n    var visibleBounds = this._map.getBounds();\n\n    for (var i = 0; i < providers.length; i++) {\n      if (providers[i].minLevel < zoom && providers[i].maxLevel > zoom)\n        if (!providers[i].boxes) {\n          // No boxes = attribution always visible\n          visibleProviders.push(providers[i]);\n          break;\n        }\n\n      for (var j = 0; j < providers[i].boxes.length; j++) {\n        var box = providers[i].boxes[j];\n        if (visibleBounds.overlaps(box)) {\n          visibleProviders.push(providers[i]);\n          break;\n        }\n      }\n    }\n\n    var attributions = [\n      '<a href=\"https://legal.here.com/terms/serviceterms/gb/\">HERE maps</a>'\n    ];\n    // eslint-disable-next-line\n    for (var i = 0; i < visibleProviders.length; i++) {\n      var provider = visibleProviders[i];\n      attributions.push(\n        '<abbr title=\"' + provider.alt + '\">' + provider.label + \"</abbr>\"\n      );\n    }\n\n    var attributionText = \"© \" + attributions.join(\", \") + \". \";\n\n    if (attributionText !== this._attributionText) {\n      this._map.attributionControl.removeAttribution(this._attributionText);\n      this._map.attributionControl.addAttribution(\n        (this._attributionText = attributionText)\n      );\n    }\n  }\n});\n\nHereTileLayers.here = function(opts) {\n  return new HereTileLayers.HERE(opts);\n};\n\nexport default HereTileLayers;\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport L, { map } from 'leaflet'\nimport * as esri from 'esri-leaflet';\nimport * as d3 from 'd3'\nimport '@asymmetrik/leaflet-d3'\nimport 'leaflet.heat'\n\nimport PropTypes from 'prop-types'\n\nimport HereTileLayers from './hereTileLayers'\n\nimport {\n  updateFeatureCount\n} from \"../actions/actions\"\n\n// modify hexbin on the fly so removing the layer from the map works.\n// from https://github.com/Asymmetrik/leaflet-d3/issues/54#issuecomment-538822001\nL.HexbinLayer.prototype.onRemove = function(map) {\n  L.SVG.prototype.onRemove.call(this);\n  // Destroy the svg container\n  this._destroyContainer();\n  // Remove events\n  map.off({ 'moveend': this.redraw }, this);\n  this._map = null;\n  // Explicitly will leave the data array alone in case the layer will be shown again\n  //this._data = [];\n  d3.select(this._container).remove();\n};\n\n\n// defining the container styles the map sits in\nconst style = {\n  width: '100%',\n  height: '100vh'\n}\n\n// use these or add your own HERE Maps credentials\nconst hereAppCode = '0XXQyxbiCjVU7jN2URXuhg'\nconst hereAppId = 'yATlKFDZwdLtjHzyTeCK'\n\n// using the reduced.day map styles, have a look at the imported hereTileLayers for more\nconst hereReducedDay = HereTileLayers.here({\n  appId: hereAppId,\n  appCode: hereAppCode,\n  scheme: 'reduced.day'\n})\n\nconst esriOceans = esri.basemapLayer('Oceans')\n\n// for this app we create two leaflet layer groups to control, one for the isochrone centers and one for the isochrone contours\nconst markersLayer = L.featureGroup();\nconst markersClusterLayer = L.markerClusterGroup();\nconst isochronesLayer = L.featureGroup();\nconst heatLayer = L.heatLayer();\n\nvar options = {\n\tradius : 18,\n\topacity: 0.3,\n\tduration: 200,\n\n\tcolorScaleExtent: [ 1, undefined ],\n\tradiusScaleExtent: [ 1, undefined ],\n\tcolorDomain: null,\n\tradiusDomain: null,\n\tcolorRange: [ '#f7fbff', '#08306b' ],\n\tradiusRange: [ 5, 18 ],\n\t\n\tpointerEvents: 'all'\n};\nconst hexLayer = L.hexbinLayer(options).hoverHandler(L.HexbinHoverHandler.tooltip());\nconst colorScale = d3.scaleLog().range(['white', '#ffecb3', '#e85285', '#6a1b9a']).interpolate(d3.interpolateLab);\nhexLayer.colorScale(colorScale);\n\n// we define our bounds of the map\nconst southWest = L.latLng(-90, -280),\n  northEast = L.latLng(90, 280),\n  bounds = L.latLngBounds(southWest, northEast)\n\n// a leaflet map consumes parameters, I'd say they are quite self-explanatory\nconst mapParams = {\n  center: [50, -140.729687],\n  zoomControl: false,\n  maxBounds: bounds,\n  maxZoom: 20,\n  zoom: 3,\n  layers: [markersClusterLayer, hereReducedDay]\n}\n\n// this you have seen before, we define a react component\nclass Map extends React.Component {\n\n  static propTypes = {\n    isochronesControls: PropTypes.object.isRequired,\n    mapEvents: PropTypes.object,\n    dispatch: PropTypes.func.isRequired\n  }\n\n  // and once the component has mounted we add everything to it\n  componentDidMount() {\n\n    // our map!\n    this.map = L.map('map', mapParams)\n\n    // we create a leaflet pane which will hold all isochrone polygons with a given opacity\n    var isochronesPane = this.map.createPane('isochronesPane')\n    isochronesPane.style.opacity = 0.9\n\n    // our basemap and add it to the map\n    const baseMaps = {\n      'HERE reduced.day': hereReducedDay,\n      'esri Oceans': esriOceans\n    }\n    const overlays = {\n      'Points': markersLayer,\n      'Point Cluster': markersClusterLayer,\n      'Hex Bin': hexLayer,\n      'Heat Map': heatLayer\n    }\n    L.control.layers(baseMaps).addTo(this.map)\n    L.control.layers(overlays).addTo(this.map)\n\n    // we do want a zoom control\n    L.control\n      .zoom({\n        position: 'topright'\n      })\n      .addTo(this.map)\n\n  }\n\n  // https://data.cioospacific.ca/erddap/tabledap/IOS_BOT_Profiles.geoJson?profile%2Clatitude%2Clongitude&time%3E=2019-08-04T00%3A00%3A00Z&time%3C=2019-08-11T22%3A44%3A33Z\n  // https://data.cioospacific.ca/erddap/tabledap/IOS_BOT_Profiles.geoJson?profile%2Clatitude%2Clongitude&distinct()\n  // https://data.cioospacific.ca/erddap/tabledap/IOS_CTD_Profiles.geoJson?profile%2Clatitude%2Clongitude&distinct()\n  // https://data.cioospacific.ca/erddap/tabledap/IOS_CTD_Moorings.geoJson?profile%2Clatitude%2Clongitude&distinct()\n  // https://data.cioospacific.ca/erddap/tabledap/IOS_ADCP_Moorings.geoJson?station%2Clatitude%2Clongitude&distinct()\n  addErddap(prevProps) {\n    const datasets = this.props.isochronesControls.erddapResults;\n    const map = this.map\n    var myIcon = L.divIcon({className: 'my-div-icon', iconSize: 8});\n    var coords = []; //define an array to store coordinates\n    var coords_rev = []\n    var features = []\n    var fcount = 0\n\n    datasets.forEach(dataset => {\n      if(!dataset.visibile){\n        return;\n      } \n      var points = dataset.data\n      features = L.geoJSON(points.features, {\n        pointToLayer: function (feature, latlng) {\n          return L.marker(latlng, { icon: myIcon })\n        },\n        onEachFeature: function (feature, layer) {\n          coords.push(feature.geometry.coordinates);\n          coords_rev.push([feature.geometry.coordinates[1], feature.geometry.coordinates[0]])\n        },\n        filter: function(feature, layer) {\n          var bounds = map.getBounds();\n          return bounds.contains(L.GeoJSON.coordsToLatLngs([feature.geometry.coordinates]));\n        }\n      })\n      \n      fcount = fcount + coords.length\n      features.addTo(markersClusterLayer)\n      hexLayer.data(coords)\n      if(heatLayer){\n        heatLayer.setLatLngs(coords_rev)\n      }else{\n        console.log('heatLayer is null: ' + heatLayer)\n      }         \n\n      // limit point layer to 1000 points\n      if (coords.length + markersLayer.getLayers().length < 1001){\n        features.addTo(markersLayer);\n      }else{\n        markersLayer.clearLayers();\n      }\n\n    })\n    \n    const { dispatch, featureCount } = this.props;\n    if(fcount > 0 && fcount != featureCount){\n      console.log('fcount: ' + fcount + ' fc: ' + featureCount)\n      dispatch(\n        updateFeatureCount({'featureCount': fcount})\n      );\n      \n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    this.addErddap(prevProps);\n  }\n\n  // don't forget to render it :-)\n  render() {\n    return <div id=\"map\" style={style} />\n  }\n}\n\n// and we already map the redux store to properties which we will start soon\nconst mapStateToProps = (state) => {\n  const isochronesControls = state.isochronesControls\n  const featureCount = state.isochronesControls.featureCount\n  return {\n    isochronesControls,\n    featureCount\n  }\n}\n\nexport default connect(mapStateToProps)(Map)","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { connect } from \"react-redux\"\nimport QueryBuilderSemantic from 'react-query-builder-semantic/QueryBuilderSemantic'\n\n// we are importing some of the beautiful semantic UI react components\nimport {\n  Segment,\n  Input,\n  Divider,\n  Button,\n  List,\n  Grid,\n  Icon,\n  Label,\n  Dropdown\n} from \"semantic-ui-react\"\n\n// here are our first two actions, we will be adding them in the next step, bear with me!\nimport {\n  updateErddapInput,\n  fetchErddapData,\n  updateQuery,\n} from \"../actions/actions\"\n\n// some inline styles (we should move these to our index.css at one stage)\nconst segmentStyle = {\n  zIndex: 999,\n  position: \"absolute\",\n  width: \"400px\",\n  top: \"10px\",\n  left: \"10px\",\n  maxHeight: \"calc(100vh - 5vw)\",\n  overflow: \"auto\",\n  padding: \"20px\"\n};\n\n// some inline styles (we should move these to our index.css at one stage)\nconst segmentStyle2 = {\n  zIndex: 999,\n  position: \"absolute\",\n  width: \"800px\",\n  top: \"10px\",\n  left: \"500px\",\n  maxHeight: \"calc(100vh - 5vw)\",\n  overflow: \"auto\",\n  padding: \"20px\",\n  marginTop: \"0\"\n};\n\nclass Control extends React.Component {\n  static propTypes = {\n    erddapInput: PropTypes.string.isRequired,\n    erddapResults: PropTypes.array.isRequired,\n    isFetching: PropTypes.bool.isRequired,\n  }\n\n  constructor(props) {\n    super(props)\n    this.handleInputChange = this.handleInputChange.bind(this)\n  }\n\n  handleInputChange = event => {\n    const { dispatch } = this.props;\n\n    dispatch(\n        updateErddapInput({\n            inputValue: event.target.value\n        })\n    )\n  }\n\n  handleAddErddap = () => {\n    const { dispatch, erddapInput } = this.props\n    // If the text input has more then 0 characters..\n    console.log(erddapInput)\n    if (erddapInput.length > 0) {\n\n      dispatch(\n        fetchErddapData({\n          inputValue: erddapInput\n        })\n      )\n    }\n  };\n\n  handleErddapToggleVisibility = (name) => {\n    const { dispatch, erddapResults } = this.props\n    // handle button click\n    console.log('Toggle Vis for ', name);\n  }\n\n\n  handleErddapRemoveDataset = (name) => {\n    const { dispatch, erddapResults } = this.props\n    // handle button click\n    console.log('Remove Dataset ', name);\n  }\n\n  getErddapCommonFields = () => {\n    const { erddapResults } = this.props\n    let fields = [];\n    erddapResults.forEach(x => {\n      if(fields.length == 0){\n        fields = x.attributes\n      } else{\n        fields = fields.filter(value => x.attributes.includes(value));\n      }\n    })\n    fields = fields.map(x => {\n      return {\n        value:x,\n        text:x\n      };\n    })\n    return fields;\n  }\n\n  getErddapURLs = () => {\n    const {erddapResults} = this.props\n    if( erddapResults.length > 0){\n\n      return erddapResults.map( x =>\n        <List.Item>\n          <List.Icon name='table' size='large' verticalAlign='middle' />\n          <List.Content>\n\n            <Button.Group floated='right'>\n            <div data-tooltip=\"coming soon\" data-position=\"top center\">\n              <Button small compact icon onClick={this.handleErddapToggleVisibility.bind(this, x.name)}>\n                <Icon name='eye' />\n              </Button>\n              <Button small compact icon onClick={this.handleErddapToggleVisibility.bind(this, x.name)}>\n                <Icon name='filter' />\n              </Button>\n              <Button small compact icon onClick={this.handleErddapRemoveDataset.bind(this, x.name)}>\n                <Icon name='trash alternate' />\n              </Button>\n            </div>\n            </Button.Group>\n\n            <List.Header as={x.name}>{x.name}</List.Header>\n            <List.Description as={x.name}></List.Description>\n          </List.Content>\n        </List.Item>\n      )\n    }\n  }\n\n\n  handleQueryChange  = json => {\n    const { dispatch } = this.props\n    console.log(json)\n    dispatch(\n      updateQuery({\n        inputValue: json\n      })\n    )\n  };\n\n  render() {\n    // The following constants are used in our search input which is also a semanticUI react component <Search... />\n    const {\n      isFetching,\n      erddapInput,\n      query\n    } = this.props;\n\n    return (\n      <div>\n\n        <Segment style={segmentStyle}>\n          <div>\n            <span>\n              ERDDAP\n            </span>\n          </div>\n          <Divider />\n\n          <Grid>\n            <Grid.Row columns={2}>\n              <Grid.Column width={13}>\n                <Input\n                  compact\n                  loading={isFetching}\n                  value={erddapInput}\n                  onChange={this.handleInputChange}\n                  style={{ width: \"100%\" }}\n                />\n              </Grid.Column>\n              <Grid.Column width={3}>\n                <Button\n                  icon\n                  compact\n                  onClick={this.handleAddErddap}\n                >\n                  <Icon\n                    name='plus square'\n                    size='large'\n                    color='black'\n                  />\n                </Button>\n              </Grid.Column>\n\n            </Grid.Row>\n            <Grid.Row columns={1}>\n              <Grid.Column width={16}>\n                <List divided relaxed >\n                  {this.getErddapURLs()}\n                </List>\n              </Grid.Column>\n            </Grid.Row>\n          </Grid>\n        </Segment>\n\n        <Segment style={segmentStyle2}>\n          <div>\n            <span>\n              Filters:\n            </span>\n            {/*<Label>\n              station\n              <span style={{ marginLeft:'12px' }}>=</span>\n              <Label.Detail>QU29</Label.Detail>\n            </Label>*/}\n            <pre>{QueryBuilderSemantic.getQueryString(query)}</pre>\n          </div>\n          <Divider />\n          <List>\n            <List.Item>\n              <List.Icon name='table' size='large' verticalAlign='middle' />\n              <List.Content>\n                <List.Header as='attribute'>station</List.Header>\n                <List.Description as='attribute_description'>station</List.Description>\n              </List.Content>\n            </List.Item>\n            <List.Item>\n              <List.Icon name='table' size='large' verticalAlign='middle' />\n              <List.Content>\n                <List.Header as='attribute'>LCEWAP01</List.Header>\n                <List.Description as='attribute_description'>Eastward Sea Water Velocity</List.Description>\n              </List.Content>\n            </List.Item>\n            <List.Item>\n              <List.Icon name='table' size='large' verticalAlign='middle' />\n              <List.Content>\n                <List.Header as='attribute'>LCNSAP01</List.Header>\n                <List.Description as='attribute_description'>Northward Sea Water Velocity</List.Description>\n              </List.Content>\n            </List.Item>\n          </List>\n          <Divider />\n          <QueryBuilderSemantic\n            fields = {this.getErddapCommonFields()}\n            operators = {[\n                { value: 'is null', text: 'Is Null' },\n                { value: 'is not null', text: 'Is Not Null' },\n                { value: 'in', text: 'In' },\n                { value: 'not in', text: 'Not In' },\n                { value: '=', text: '=' },\n                { value: '!=', text: '!=' },\n                { value: '<', text: '<' },\n                { value: '>', text: '>' },\n                { value: '<=', text: '<=' },\n                { value: '>=', text: '>=' },\n            ]}\n            query = {query}\n            onQueryChange={this.handleQueryChange}/>\n        </Segment>\n      </div>\n    )\n  }\n}\n\n//\nconst mapStateToProps = state => {\n  const erddapInput = state.isochronesControls.erddapInput\n  const isFetching = state.isochronesControls.isFetching\n  const erddapResults = state.isochronesControls.erddapResults\n  const query = state.filters.query\n  return {\n    erddapInput,\n    isFetching,\n    erddapResults,\n    query,\n  }\n}\n\nexport default connect(mapStateToProps)(Control)\n","import React from 'react'\nimport Map from './Map/Map'\nimport Controls from './Controls/Control'\n\nclass App extends React.Component {\n\n  render() {\n    return (\n      <div>\n        <Map />\n        <Controls />\n      </div>\n    )\n  }\n}\n\nexport default App","import React from 'react'\nimport { render } from 'react-dom'\n\nimport { createStore, applyMiddleware } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport { createLogger } from 'redux-logger'\nimport { L } from 'leaflet'\nimport 'leaflet.markercluster'\n\nimport reducer from './reducers'\nimport App from './App'\nimport './index.css' // postCSS import of CSS module\n\nconst middleware = [thunk]\n\nconst store = createStore(\n  reducer,\n  composeWithDevTools(applyMiddleware(...middleware))\n)\n\nrender(\n  <Provider store={store}>\n    {' '}\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}