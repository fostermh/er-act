[{"/mnt/hgfs/matthew.foster/Projects/er-act/src/index.js":"1","/mnt/hgfs/matthew.foster/Projects/er-act/src/App.jsx":"2","/mnt/hgfs/matthew.foster/Projects/er-act/src/reducers/index.js":"3","/mnt/hgfs/matthew.foster/Projects/er-act/src/Controls/Control.jsx":"4","/mnt/hgfs/matthew.foster/Projects/er-act/src/Map/Map.jsx":"5","/mnt/hgfs/matthew.foster/Projects/er-act/src/actions/actions.js":"6","/mnt/hgfs/matthew.foster/Projects/er-act/src/Map/hereTileLayers.js":"7"},{"size":695,"mtime":1611517545000,"results":"8","hashOfConfig":"9"},{"size":253,"mtime":1608356972000,"results":"10","hashOfConfig":"9"},{"size":1475,"mtime":1611517649000,"results":"11","hashOfConfig":"9"},{"size":4038,"mtime":1611561127000,"results":"12","hashOfConfig":"9"},{"size":6587,"mtime":1611559241000,"results":"13","hashOfConfig":"9"},{"size":1828,"mtime":1611558368000,"results":"14","hashOfConfig":"9"},{"size":5580,"mtime":1608355779000,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18","usedDeprecatedRules":"19"},"3beneu",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"19"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},"/mnt/hgfs/matthew.foster/Projects/er-act/src/index.js",["34","35"],"import React from 'react'\nimport { render } from 'react-dom'\n\nimport { createStore, applyMiddleware } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport { createLogger } from 'redux-logger'\nimport { L } from 'leaflet'\nimport 'leaflet.markercluster'\n\nimport reducer from './reducers'\nimport App from './App'\nimport './index.css' // postCSS import of CSS module\n\nconst middleware = [thunk]\n\nconst store = createStore(\n  reducer,\n  composeWithDevTools(applyMiddleware(...middleware))\n)\n\nrender(\n  <Provider store={store}>\n    {' '}\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n",["36","37"],"/mnt/hgfs/matthew.foster/Projects/er-act/src/App.jsx",[],"/mnt/hgfs/matthew.foster/Projects/er-act/src/reducers/index.js",[],"/mnt/hgfs/matthew.foster/Projects/er-act/src/Controls/Control.jsx",[],"/mnt/hgfs/matthew.foster/Projects/er-act/src/Map/Map.jsx",["38","39","40"],"import React from 'react'\nimport { connect } from 'react-redux'\nimport L, { map } from 'leaflet'\nimport * as esri from 'esri-leaflet';\nimport * as d3 from 'd3'\nimport '@asymmetrik/leaflet-d3'\nimport 'leaflet.heat'\n\nimport PropTypes from 'prop-types'\n\nimport HereTileLayers from './hereTileLayers'\n\nimport {\n  updateFeatureCount\n} from \"../actions/actions\"\n\n// modify hexbin on the fly so removing the layer from the map works.\n// from https://github.com/Asymmetrik/leaflet-d3/issues/54#issuecomment-538822001\nL.HexbinLayer.prototype.onRemove = function(map) {\n  L.SVG.prototype.onRemove.call(this);\n  // Destroy the svg container\n  this._destroyContainer();\n  // Remove events\n  map.off({ 'moveend': this.redraw }, this);\n  this._map = null;\n  // Explicitly will leave the data array alone in case the layer will be shown again\n  //this._data = [];\n  d3.select(this._container).remove();\n};\n\n\n// defining the container styles the map sits in\nconst style = {\n  width: '100%',\n  height: '100vh'\n}\n\n// use these or add your own HERE Maps credentials\nconst hereAppCode = '0XXQyxbiCjVU7jN2URXuhg'\nconst hereAppId = 'yATlKFDZwdLtjHzyTeCK'\n\n// using the reduced.day map styles, have a look at the imported hereTileLayers for more\nconst hereReducedDay = HereTileLayers.here({\n  appId: hereAppId,\n  appCode: hereAppCode,\n  scheme: 'reduced.day'\n})\n\nconst esriOceans = esri.basemapLayer('Oceans')\n\n// for this app we create two leaflet layer groups to control, one for the isochrone centers and one for the isochrone contours\nconst markersLayer = L.featureGroup();\nconst markersClusterLayer = L.markerClusterGroup();\nconst isochronesLayer = L.featureGroup();\nconst heatLayer = L.heatLayer();\n\nvar options = {\n\tradius : 18,\n\topacity: 0.3,\n\tduration: 200,\n\n\tcolorScaleExtent: [ 1, undefined ],\n\tradiusScaleExtent: [ 1, undefined ],\n\tcolorDomain: null,\n\tradiusDomain: null,\n\tcolorRange: [ '#f7fbff', '#08306b' ],\n\tradiusRange: [ 5, 18 ],\n\t\n\tpointerEvents: 'all'\n};\nconst hexLayer = L.hexbinLayer(options).hoverHandler(L.HexbinHoverHandler.tooltip());\nconst colorScale = d3.scaleLog().range(['white', '#ffecb3', '#e85285', '#6a1b9a']).interpolate(d3.interpolateLab);\nhexLayer.colorScale(colorScale);\n\n// we define our bounds of the map\nconst southWest = L.latLng(-90, -280),\n  northEast = L.latLng(90, 280),\n  bounds = L.latLngBounds(southWest, northEast)\n\n// a leaflet map consumes parameters, I'd say they are quite self-explanatory\nconst mapParams = {\n  center: [50, -140.729687],\n  zoomControl: false,\n  maxBounds: bounds,\n  maxZoom: 20,\n  zoom: 3,\n  layers: [markersClusterLayer, hereReducedDay]\n}\n\n// this you have seen before, we define a react component\nclass Map extends React.Component {\n\n  static propTypes = {\n    isochronesControls: PropTypes.object.isRequired,\n    mapEvents: PropTypes.object,\n    dispatch: PropTypes.func.isRequired\n  }\n\n  // and once the component has mounted we add everything to it\n  componentDidMount() {\n\n    // our map!\n    this.map = L.map('map', mapParams)\n\n    // we create a leaflet pane which will hold all isochrone polygons with a given opacity\n    var isochronesPane = this.map.createPane('isochronesPane')\n    isochronesPane.style.opacity = 0.9\n\n    // our basemap and add it to the map\n    const baseMaps = {\n      'HERE reduced.day': hereReducedDay,\n      'esri Oceans': esriOceans\n    }\n    const overlays = {\n      'Points': markersLayer,\n      'Point Cluster': markersClusterLayer,\n      'Hex Bin': hexLayer,\n      'Heat Map': heatLayer\n    }\n    L.control.layers(baseMaps).addTo(this.map)\n    L.control.layers(overlays).addTo(this.map)\n\n    // we do want a zoom control\n    L.control\n      .zoom({\n        position: 'topright'\n      })\n      .addTo(this.map)\n\n  }\n\n  // https://data.cioospacific.ca/erddap/tabledap/IOS_BOT_Profiles.geoJson?profile%2Clatitude%2Clongitude&time%3E=2019-08-04T00%3A00%3A00Z&time%3C=2019-08-11T22%3A44%3A33Z\n  // https://data.cioospacific.ca/erddap/tabledap/IOS_BOT_Profiles.geoJson?profile%2Clatitude%2Clongitude&distinct()\n  // https://data.cioospacific.ca/erddap/tabledap/IOS_CTD_Profiles.geoJson?profile%2Clatitude%2Clongitude&distinct()\n  // https://data.cioospacific.ca/erddap/tabledap/IOS_CTD_Moorings.geoJson?profile%2Clatitude%2Clongitude&distinct()\n  // https://data.cioospacific.ca/erddap/tabledap/IOS_ADCP_Moorings.geoJson?station%2Clatitude%2Clongitude&distinct()\n  addErddap(prevProps) {\n    const datasets = this.props.isochronesControls.erddapResults;\n    const map = this.map\n    var myIcon = L.divIcon({className: 'my-div-icon', iconSize: 8});\n    var coords = []; //define an array to store coordinates\n    var coords_rev = []\n    var features = []\n    var fcount = 0\n\n    datasets.forEach(dataset => {\n      if(!dataset.visibile){\n        return;\n      } \n      var points = dataset.data\n      features = L.geoJSON(points.features, {\n        pointToLayer: function (feature, latlng) {\n          return L.marker(latlng, { icon: myIcon })\n        },\n        onEachFeature: function (feature, layer) {\n          coords.push(feature.geometry.coordinates);\n          coords_rev.push([feature.geometry.coordinates[1], feature.geometry.coordinates[0]])\n        },\n        filter: function(feature, layer) {\n          var bounds = map.getBounds();\n          return bounds.contains(L.GeoJSON.coordsToLatLngs([feature.geometry.coordinates]));\n        }\n      })\n      \n      fcount = fcount + coords.length\n      features.addTo(markersClusterLayer)\n      hexLayer.data(coords)\n      if(heatLayer){\n        heatLayer.setLatLngs(coords_rev)\n      }else{\n        console.log('heatLayer is null: ' + heatLayer)\n      }         \n\n      // limit point layer to 1000 points\n      if (coords.length + markersLayer.getLayers().length < 1001){\n        features.addTo(markersLayer);\n      }else{\n        markersLayer.clearLayers();\n      }\n\n    })\n    \n    const { dispatch, featureCount } = this.props;\n    if(fcount > 0 && fcount != featureCount){\n      console.log('fcount: ' + fcount + ' fc: ' + featureCount)\n      dispatch(\n        updateFeatureCount({'featureCount': fcount})\n      );\n      \n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    this.addErddap(prevProps);\n  }\n\n  // don't forget to render it :-)\n  render() {\n    return <div id=\"map\" style={style} />\n  }\n}\n\n// and we already map the redux store to properties which we will start soon\nconst mapStateToProps = (state) => {\n  const isochronesControls = state.isochronesControls\n  const featureCount = state.isochronesControls.featureCount\n  return {\n    isochronesControls,\n    featureCount\n  }\n}\n\nexport default connect(mapStateToProps)(Map)","/mnt/hgfs/matthew.foster/Projects/er-act/src/actions/actions.js",[],"/mnt/hgfs/matthew.foster/Projects/er-act/src/Map/hereTileLayers.js",[],["41","42"],{"ruleId":"43","severity":1,"message":"44","line":8,"column":10,"nodeType":"45","messageId":"46","endLine":8,"endColumn":22},{"ruleId":"43","severity":1,"message":"47","line":9,"column":10,"nodeType":"45","messageId":"46","endLine":9,"endColumn":11},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"43","severity":1,"message":"52","line":3,"column":13,"nodeType":"45","messageId":"46","endLine":3,"endColumn":16},{"ruleId":"43","severity":1,"message":"53","line":54,"column":7,"nodeType":"45","messageId":"46","endLine":54,"endColumn":22},{"ruleId":"54","severity":1,"message":"55","line":184,"column":29,"nodeType":"56","messageId":"57","endLine":184,"endColumn":31},{"ruleId":"48","replacedBy":"58"},{"ruleId":"50","replacedBy":"59"},"no-unused-vars","'createLogger' is defined but never used.","Identifier","unusedVar","'L' is defined but never used.","no-native-reassign",["60"],"no-negated-in-lhs",["61"],"'map' is defined but never used.","'isochronesLayer' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected",["60"],["61"],"no-global-assign","no-unsafe-negation"]